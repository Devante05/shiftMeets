{"ast":null,"code":"import _regeneratorRuntime from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/devante/personalProjects/shiftMeet/client/src/components/PostsList/index.js\";\n\nimport React, { useEffect } from \"react\";\nimport { ListItem, List } from \"../List\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { GET_POSTS, REMOVE_POST } from \"../../utils/actions\";\n\nvar PostsList = function PostsList() {\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n      state = _useStoreContext2[0],\n      dispatch = _useStoreContext2[1];\n\n  var getPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.getPosts();\n\n            case 3:\n              response = _context.sent;\n              dispatch({\n                type: GET_POSTS,\n                posts: response.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removePost = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return API.deletePost(id);\n\n            case 3:\n              response = _context2.sent;\n              dispatch({\n                type: REMOVE_POST,\n                _id: id\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function removePost(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"All Car Meets\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-5 mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Click on a post to view\"), state.posts.length ? /*#__PURE__*/React.createElement(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, state.posts.map(function (post) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: post._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/posts/\" + post._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, post.location, \" by \", post.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        removePost(post._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"You haven't added any posts yet!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-dark\",\n    to: \"favorites\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"View favorites\")));\n};\n\nexport default PostsList;","map":{"version":3,"sources":["/Users/devante/personalProjects/shiftMeet/client/src/components/PostsList/index.js"],"names":["React","useEffect","ListItem","List","DeleteBtn","Link","API","useStoreContext","GET_POSTS","REMOVE_POST","PostsList","state","dispatch","getPosts","response","type","posts","data","console","log","removePost","id","deletePost","_id","length","map","post","location","author"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { ListItem, List } from \"../List\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {GET_POSTS, REMOVE_POST} from \"../../utils/actions\";\n\nconst PostsList = () => {\n\n  const [state, dispatch] = useStoreContext();\n\n  const getPosts = async () => {\n    try {\n      const response = await API.getPosts();\n\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  const removePost = async id => {\n    try {\n      const response = await API.deletePost(id);\n\n      dispatch({\n        type: REMOVE_POST,\n        _id: id\n      });\n\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div>\n      <h1>All Car Meets</h1>\n      <h3 className=\"mb-5 mt-5\">Click on a post to view</h3>\n      {/* Replace `[]` with the appropriate arrays */}\n      {state.posts.length ? (\n        <List>\n          {state.posts.map(post => (\n            <ListItem key={post._id}>\n              <Link to={\"/posts/\" + post._id}>\n                <strong>\n                  {post.location} by {post.author}\n                </strong>\n              </Link>\n              <DeleteBtn onClick={() => {removePost(post._id)}} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <h3 className = \"text-dark\">You haven't added any posts yet!</h3>\n      )}\n      <div className=\"mt-5\">\n        <Link className = \"text-dark\" to=\"favorites\">View favorites</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PostsList;\n"]},"metadata":{},"sourceType":"module"}