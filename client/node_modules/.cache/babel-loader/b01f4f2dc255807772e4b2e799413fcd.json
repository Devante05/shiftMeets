{"ast":null,"code":"import _slicedToArray from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/devante/personalProjects/shiftMeet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/devante/personalProjects/shiftMeet/client/src/utils/GlobalState.js\";\n\nimport React, { createContext, useReducer, useContext } from \"react\"; // Don't forget to import all of your actions!\n\nimport { GET_POSTS, ADD_POST, REMOVE_POST, SET_CURRENT_POST, LOADING } from \"./actions.js\";\nvar StoreContext = createContext();\nvar Provider = StoreContext.Provider;\nvar initialState = {\n  posts: [],\n  currentPost: {\n    _id: 0,\n    title: \"\",\n    body: \"\",\n    author: \"\"\n  },\n  favorites: [],\n  loading: false\n};\n\nvar reducerFunction = function reducerFunction(state, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: _toConsumableArray(action.posts),\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [action.post].concat(_toConsumableArray(state.posts)),\n        loading: false\n      });\n\n    case REMOVE_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.filter(function (item) {\n          return item._id !== action._id;\n        }),\n        loading: false\n      });\n\n    case SET_CURRENT_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentPost: action.post,\n        loading: false\n      });\n\n    case LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [] : _ref$value,\n      props = _objectWithoutProperties(_ref, [\"value\"]);\n\n  var _useReducer = useReducer(reducerFunction, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }));\n};\n\nvar useStoreContext = function useStoreContext() {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/devante/personalProjects/shiftMeet/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","GET_POSTS","ADD_POST","REMOVE_POST","SET_CURRENT_POST","LOADING","StoreContext","Provider","initialState","posts","currentPost","_id","title","body","author","favorites","loading","reducerFunction","state","action","type","post","filter","item","StoreProvider","value","props","dispatch","useStoreContext"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D,C,CACA;;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,OALF,QAMO,cANP;AASA,IAAMC,YAAY,GAAGR,aAAa,EAAlC;IACQS,Q,GAAaD,Y,CAAbC,Q;AAER,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,GAAG,EAAE,CADM;AAEXC,IAAAA,KAAK,EAAE,EAFI;AAGXC,IAAAA,IAAI,EAAE,EAHK;AAIXC,IAAAA,MAAM,EAAE;AAJG,GAFM;AAQnBC,EAAAA,SAAS,EAAE,EARQ;AASnBC,EAAAA,OAAO,EAAE;AATU,CAArB;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,SAAL;AACE,6CACKiB,KADL;AAEET,QAAAA,KAAK,qBAAMU,MAAM,CAACV,KAAb,CAFP;AAGEO,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKd,QAAL;AACE,6CACKgB,KADL;AAEET,QAAAA,KAAK,GAAGU,MAAM,CAACE,IAAV,4BAAmBH,KAAK,CAACT,KAAzB,EAFP;AAGEO,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKb,WAAL;AACE,6CACKe,KADL;AAEET,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYa,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACZ,GAAL,KAAaQ,MAAM,CAACR,GAAxB;AAAA,SAAvB,CAFT;AAGEK,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKZ,gBAAL;AACE,6CACKc,KADL;AAEER,QAAAA,WAAW,EAAES,MAAM,CAACE,IAFtB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKX,OAAL;AACE,6CACKa,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,OAA8B;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAZC,KAAY;;AAAA,oBACxB3B,UAAU,CAACkB,eAAD,EAAkBT,YAAlB,CADc;AAAA;AAAA,MAC3CU,KAD2C;AAAA,MACpCS,QADoC;;AAGlD,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACT,KAAD,EAAQS,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAJD;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SAAO5B,UAAU,CAACM,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASkB,aAAT,EAAwBI,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n// Don't forget to import all of your actions!\nimport {\n  GET_POSTS,\n  ADD_POST,\n  REMOVE_POST,\n  SET_CURRENT_POST,\n  LOADING\n} from \"./actions.js\";\n\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst initialState = {\n  posts: [],\n  currentPost: {\n    _id: 0,\n    title: \"\",\n    body: \"\",\n    author: \"\"\n  },\n  favorites: [],\n  loading: false\n};\n\nconst reducerFunction = (state, action) => {\n  switch (action.type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: [...action.posts],\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n        loading: false\n      };\n    case REMOVE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(item => item._id !== action._id),\n        loading: false\n      };\n    case SET_CURRENT_POST:\n      return {\n        ...state,\n        currentPost: action.post,\n        loading: false\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}